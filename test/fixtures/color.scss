@import 'init';

.color-function {
  .given-name-parameter {
    .should-find-color-with-bare-string {
      /* color(red) outputs: #933 */
      color: color(red);
      /* color(blue) outputs: #33f */
      color: color(blue);
    }

    .should-find-color-with-quoted-string {
      /* color('gray') outputs: #999 */
      color: color('gray');
      /* color('black') outputs: #111 */
      color: color('black');
    }
  }

  .given-global-active-schema-variable {
    $chroma-active-scheme: 'functional' !global;

    .should-find-value-from-parent-scheme {
      /* color(text) outputs: #111 */
      color: color(text);
    }

    .should-find-multi-inherited-value {
      /* color(link) outputs: #33f */
      color: color(link);
    }
  }

  .given-schema-parameter {
    .should-find-color-from-parent-scheme {
      /* color(alternate, text) outputs: #111 */
      color: color(alternate, text);
    }

    .should-find-multi-inherited-value {
      /* color(alternate, link) outputs: #933 */
      color: color(alternate, link);
    }
  }
}
